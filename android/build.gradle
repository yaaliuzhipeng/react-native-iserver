def CompileSdkVersion='30'
def BuildToolsVersion='30.0.2'
def MinSdkVersion='21'
def TargetSdkVersion='30'
def KotlinVersion='1.5.32'

def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}
def getProperty(key) {
    project.properties.get(key)
}

apply plugin: 'com.android.library'
apply plugin: "kotlin-android"
// exception: https://github.com/yaaliuzhipeng/react-native-iserver/issues/3
// apply plugin: "kotlin-android-extensions"

buildscript {
    // buildscript is executed before everything
    def kotlinVersion = rootProject.ext.has('kotlinVersion') ? rootProject.ext.get('kotlinVersion') : "1.5.32"
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:7.0.4"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

android {
    compileSdkVersion safeExtGet('compileSdkVersion', CompileSdkVersion)
    buildToolsVersion safeExtGet('buildToolsVersion', BuildToolsVersion)
    defaultConfig {
        minSdkVersion safeExtGet('minSdkVersion', MinSdkVersion)
        targetSdkVersion safeExtGet('targetSdkVersion', TargetSdkVersion)
        versionCode 1
        versionName "1.0"
    }
    lintOptions {
        abortOnError false
    }
}

repositories {
    maven {
        // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
        url("$rootDir/../node_modules/react-native/android")
    }
    mavenCentral()
    google()
}

def kotlinVersion = safeExtGet('kotlinVersion',KotlinVersion)
dependencies {
    //noinspection GradleDynamicVersion
    implementation "com.facebook.react:react-native:+"  // From node_modules
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    // implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.0"
}